
@inproceedings{w_hu_open_2019,
	title = {Open {Source} {Software} {Vulnerability} {Propagation} {Analysis} {Algorithm} based on {Knowledge} {Graph}},
	doi = {10.1109/SmartCloud.2019.00030},
	booktitle = {2019 {IEEE} {International} {Conference} on {Smart} {Cloud} ({SmartCloud})},
	author = {{W. Hu} and {Y. Wang} and {X. Liu} and {J. Sun} and {Q. Gao} and {Y. Huang}},
	month = dec,
	year = {2019},
	note = {Journal Abbreviation: 2019 IEEE International Conference on Smart Cloud (SmartCloud)},
	pages = {121--127},
}

@inproceedings{c_liu_demystifying_2022,
	title = {Demystifying the {Vulnerability} {Propagation} and {Its} {Evolution} via {Dependency} {Trees} in the {NPM} {Ecosystem}},
	isbn = {1558-1225},
	doi = {10.1145/3510003.3510142},
	booktitle = {2022 {IEEE}/{ACM} 44th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {{C. Liu} and {S. Chen} and {L. Fan} and {B. Chen} and {Y. Liu} and {X. Peng}},
	month = may,
	year = {2022},
	note = {Journal Abbreviation: 2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)},
	pages = {672--684},
}

@inproceedings{s_kyatam_heartbleed_2017,
	title = {Heartbleed attacks implementation and vulnerability},
	doi = {10.1109/LISAT.2017.8001980},
	booktitle = {2017 {IEEE} {Long} {Island} {Systems}, {Applications} and {Technology} {Conference} ({LISAT})},
	author = {{S. Kyatam} and {A. Alhayajneh} and {T. Hayajneh}},
	month = may,
	year = {2017},
	note = {Journal Abbreviation: 2017 IEEE Long Island Systems, Applications and Technology Conference (LISAT)},
	pages = {1--6},
}

@inproceedings{a_m_mir_effect_2023,
	title = {On the {Effect} of {Transitivity} and {Granularity} on {Vulnerability} {Propagation} in the {Maven} {Ecosystem}},
	isbn = {2640-7574},
	doi = {10.1109/SANER56733.2023.00028},
	booktitle = {2023 {IEEE} {International} {Conference} on {Software} {Analysis}, {Evolution} and {Reengineering} ({SANER})},
	author = {{A. M. Mir} and {M. Keshani} and {S. Proksch}},
	month = mar,
	year = {2023},
	note = {Journal Abbreviation: 2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)},
	pages = {201--211},
}

@misc{noauthor_vulnerability_nodate,
	title = {Vulnerability {APIs}},
	url = {https://nvd.nist.gov/developers/vulnerabilities},
	urldate = {2024-06-29},
}

@article{roumani_time_2015,
	title = {Time series modeling of vulnerabilities},
	volume = {51},
	issn = {0167-4048},
	url = {https://www.sciencedirect.com/science/article/pii/S0167404815000358},
	doi = {10.1016/j.cose.2015.03.003},
	abstract = {Vulnerability prediction models forecast future vulnerabilities and can be used to assess security risks and estimate the resources needed for handling potential security breaches. Although several vulnerability prediction models have been proposed, such models have shortcomings and do not consider trend, level, and seasonality components of vulnerabilities. Through time series analysis, this study built predictive models for five popular web browsers: Chrome, Firefox, Internet Explorer, Safari and Opera and for all reported vulnerabilities elsewhere. Results showed that time series models provide a good fit to our vulnerability datasets and can be useful for vulnerability prediction. Results also suggested that the level of the series is the best estimator of the prediction models.},
	journal = {Computers \& Security},
	author = {Roumani, Yaman and Nwankpa, Joseph K. and Roumani, Yazan F.},
	month = jun,
	year = {2015},
	keywords = {ARIMA, Exponential smoothing, Forecasting, Time series modeling, Vulnerabilities, Web browsers},
	pages = {32--40},
}

@article{pokhrel_cybersecurity_2017,
	title = {Cybersecurity: {Time} {Series} {Predictive} {Modeling} of {Vulnerabilities} of {Desktop} {Operating} {System} {Using} {Linear} and {Non}-{Linear} {Approach}},
	volume = {08},
	doi = {10.4236/jis.2017.84023},
	journal = {Journal of Information Security},
	author = {Pokhrel, Nawa Raj and Rodrigo, Hansapani and Tsokos, Chris},
	month = jan,
	year = {2017},
	pages = {362--382},
}

@article{gencer_time_2021,
	title = {Time {Series} {Forecast} {Modeling} of {Vulnerabilities} in the {Android} {Operating} {System} {Using} {ARIMA} and {Deep} {Learning} {Methods}},
	volume = {30},
	doi = {10.1016/j.suscom.2021.100515},
	journal = {Sustainable Computing: Informatics and Systems},
	author = {Gencer, Kerem and Fatih, B.},
	month = jan,
	year = {2021},
	pages = {100515},
}

@article{xia_predicting_2022,
	title = {Predicting health indicators for open source projects (using hyperparameter optimization)},
	volume = {27},
	issn = {1382-3256},
	url = {https://doi.org/10.1007/s10664-022-10171-0},
	doi = {10.1007/s10664-022-10171-0},
	abstract = {Software developed on public platform is a source of data that can be used to make predictions about those projects. While the individual developing activity may be random and hard to predict, the developing behavior on project level can be predicted with good accuracy when large groups of developers work together on software projects. To demonstrate this, we use 64,181 months of data from 1,159 GitHub projects to make various predictions about the recent status of those projects (as of April 2020). We find that traditional estimation algorithms make many mistakes. Algorithms like k-nearest neighbors (KNN), support vector regression (SVR), random forest (RFT), linear regression (LNR), and regression trees (CART) have high error rates. But that error rate can be greatly reduced using hyperparameter optimization. To the best of our knowledge, this is the largest study yet conducted, using recent data for predicting multiple health indicators of open-source projects. To facilitate open science (and replications and extensions of this work), all our materials are available online at .},
	number = {6},
	journal = {Empirical Softw. Engg.},
	author = {Xia, Tianpei and Fu, Wei and Shu, Rui and Agrawal, Rishabh and Menzies, Tim},
	month = nov,
	year = {2022},
	note = {Place: USA
Publisher: Kluwer Academic Publishers},
	keywords = {Hyperparameter optimization, Machine learning, Project health},
}

@article{l_bao_large_2021,
	title = {A {Large} {Scale} {Study} of {Long}-{Time} {Contributor} {Prediction} for {GitHub} {Projects}},
	volume = {47},
	issn = {1939-3520},
	doi = {10.1109/TSE.2019.2918536},
	number = {6},
	journal = {IEEE Transactions on Software Engineering},
	author = {{L. Bao} and {X. Xia} and {D. Lo} and {G. C. Murphy}},
	month = jun,
	year = {2021},
	pages = {1277--1298},
}

@inproceedings{m_z_malik_protection_2023,
	title = {Protection {Mechanism} against {Software} {Supply} {Chain} {Attacks} through {Blockchain}},
	doi = {10.1109/ComTech57708.2023.10164932},
	booktitle = {2023 {International} {Conference} on {Communication} {Technologies} ({ComTech})},
	author = {{M. Z. Malik} and {S. Z. A. Bukhari}},
	month = mar,
	year = {2023},
	note = {Journal Abbreviation: 2023 International Conference on Communication Technologies (ComTech)},
	pages = {73--78},
}

@article{ohm_backstabbers_2020,
	title = {Backstabber's {Knife} {Collection}: {A} {Review} of {Open} {Source} {Software} {Supply} {Chain} {Attacks}},
	volume = {abs/2005.09535},
	url = {https://arxiv.org/abs/2005.09535},
	journal = {CoRR},
	author = {Ohm, Marc and Plate, Henrik and Sykosch, Arnold and Meier, Michael},
	year = {2020},
	note = {arXiv: 2005.09535},
}

@inproceedings{x_wang_feasibility_2021,
	title = {On the {Feasibility} of {Detecting} {Software} {Supply} {Chain} {Attacks}},
	isbn = {2155-7586},
	doi = {10.1109/MILCOM52596.2021.9652901},
	booktitle = {{MILCOM} 2021 - 2021 {IEEE} {Military} {Communications} {Conference} ({MILCOM})},
	author = {{X. Wang}},
	month = dec,
	year = {2021},
	note = {Journal Abbreviation: MILCOM 2021 - 2021 IEEE Military Communications Conference (MILCOM)},
	pages = {458--463},
}

@inproceedings{k_singi_trusted_2019,
	title = {Trusted {Software} {Supply} {Chain}},
	isbn = {2643-1572},
	doi = {10.1109/ASE.2019.00141},
	booktitle = {2019 34th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering} ({ASE})},
	author = {{K. Singi} and {J. C. B. R P} and {S. Podder} and {A. P. Burden}},
	month = nov,
	year = {2019},
	note = {Journal Abbreviation: 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	pages = {1212--1213},
}

@inproceedings{zajdel_open_2022,
	address = {New York, NY, USA},
	series = {{SPLC} '22},
	title = {Open source software: an approach to controlling usage and risk in application ecosystems},
	isbn = {978-1-4503-9443-7},
	url = {https://doi.org/10.1145/3546932.3547000},
	doi = {10.1145/3546932.3547000},
	abstract = {The Open Source Software movement has been growing exponentially for a number of years with no signs of slowing. Driving this growth is the wide-spread availability of libraries and frameworks that provide many functionalities. Developers are saving time and money incorporating this functionality into their applications resulting in faster more feature-rich releases. Despite the growing success and the advantages that open source software provides, there is a dark side. Due to its community construction and largely unregulated distribution, the majority of open source software contains bugs, vulnerabilities and other issues making it highly susceptible to exploits. The lack of oversight in general hinders the quality of this software resulting in a trickle down effect in the applications that use it. Additionally, developers who use open source tend to arbitrarily download the software into their build systems but rarely keep track of what they have downloaded resulting in an excessive amount of open source software in their applications and in their ecosystem. This paper discusses processes and practices that users of open source software can implement into their environments that can safely track and control the introduction and usage of open source software into their applications, and report on some preliminary results obtained in an industrial context. We conclude by discussing governance issues related to the disciplined use and reuse of open source and areas for further improvements.},
	booktitle = {Proceedings of the 26th {ACM} {International} {Systems} and {Software} {Product} {Line} {Conference} - {Volume} {A}},
	publisher = {Association for Computing Machinery},
	author = {Zajdel, Stan and Costa, Diego Elias and Mili, Hafedh},
	year = {2022},
	note = {event-place: Graz, Austria},
	keywords = {DevSecOps, NPM, dependencies, maven, open source software},
	pages = {154--163},
}

@inproceedings{f_maulana_unmasking_2023,
	title = {Unmasking log4j’s {Vulnerability}: {Protecting} {Systems} against {Exploitation} through {Ethical} {Hacking} and {Cyberlaw} {Perspectives}},
	isbn = {2836-1911},
	doi = {10.1109/ICCCE58854.2023.10246082},
	booktitle = {2023 9th {International} {Conference} on {Computer} and {Communication} {Engineering} ({ICCCE})},
	author = {{F. Maulana} and {H. Fajri} and {M. F. Safitra} and {M. Lubis}},
	month = aug,
	year = {2023},
	note = {Journal Abbreviation: 2023 9th International Conference on Computer and Communication Engineering (ICCCE)},
	pages = {311--316},
}

@inproceedings{h_gupta_identification_2022,
	title = {Identification and {Analysis} of {Log4j} {Vulnerability}},
	isbn = {2767-7362},
	doi = {10.1109/SMART55829.2022.10047372},
	booktitle = {2022 11th {International} {Conference} on {System} {Modeling} \& {Advancement} in {Research} {Trends} ({SMART})},
	author = {{H. Gupta} and {A. Chaudhary} and {A. Kumar}},
	month = dec,
	year = {2022},
	note = {Journal Abbreviation: 2022 11th International Conference on System Modeling \& Advancement in Research Trends (SMART)},
	pages = {1580--1583},
}
